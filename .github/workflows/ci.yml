name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: web-ui/package-lock.json
    
    - name: Instalar dependências
      run: |
        cd web-ui
        npm ci
    
    - name: Executar lint
      run: |
        cd web-ui
        npm run lint
    
    - name: Executar testes
      run: |
        cd web-ui
        npm run test:ci
    
    - name: Verificar build
      run: |
        cd web-ui
        npm run build
    
    - name: Verificar tipos TypeScript
      run: |
        cd web-ui
        npm run type-check

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: web-ui/package-lock.json
    
    - name: Instalar dependências
      run: |
        cd web-ui
        npm ci
    
    - name: Auditoria de segurança
      run: |
        cd web-ui
        npm audit --audit-level=high
    
    - name: Verificar vulnerabilidades
      run: |
        cd web-ui
        npx better-npm-audit audit --level high

  deploy-staging:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: web-ui/package-lock.json
    
    - name: Instalar dependências
      run: |
        cd web-ui
        npm ci
    
    - name: Build para staging
      run: |
        cd web-ui
        npm run build
      env:
        NODE_ENV: staging
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
    
    - name: Deploy para Staging
      run: |
        cd web-ui
        npm run deploy:staging
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  deploy-production:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: web-ui/package-lock.json
    
    - name: Instalar dependências
      run: |
        cd web-ui
        npm ci
    
    - name: Build para produção
      run: |
        cd web-ui
        npm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.PRODUCTION_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PRODUCTION_SUPABASE_ANON_KEY }}
    
    - name: Deploy para Produção
      run: |
        cd web-ui
        npm run deploy:production
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    - name: Notificar deploy
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        text: 'Deploy para produção ${{ job.status }}: ${{ github.sha }}' 